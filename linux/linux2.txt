备注：https://www.linuxprobe.com/
一，命令
1，系统操作命令
（1）rpm(RPM软件包管理器)
        (1) 一种用于互联网下载包的打包及安装工具，在编译安装过程中解决了多个软件之间的依赖关系
        (2)  -q(查询包)  -a(验证包)  -e(卸载包)  -i(安装包)  -h(打印出过程)  -v(详细打印)  -U(升级包)
              eg：rpm -e  MySQL-server       # 卸载软件MySQL-server
              eg：rpm -qa  MySQL-server     # 查询所有被安装的软件MySQL-server，-qa后面必须跟软件全名               
              eg：rpm -qa | grep -i mysql     # 查询出和mysql有关的，已经安装的软件
              eg：rpm -ivh MySQL-server     # 用rpm的形式安装MySQL-server
              eg：rpm -Uvh MySQL-server   # 更新软件MySQL-server

（2）Yum软件仓库
        (1) Yum软件仓库可以根据用户的要求分析出所需软件包及其相关的依赖关系，然后自动从服务器下载软件包并安装到系统
        (2)  操作：
              eg：yum install -y mysql          # 安装mysql
              eg：yum reinstall -y mysql       # 重新安装mysql
              eg：yum update -y mysql        # 升级(更新)mysql
              eg：yum remove -y mysql       # 移除(卸载)mysql
              eg：yum info mysql                 # 查看mysql软件包信息

              eg：yum clean all                           # 清除所有仓库缓存
              eg：yum check-update                   # 检查可更新的软件包
              eg：yum grouplist                          # 查看系统中已经安装的软件包组
              eg：yum groupinstall 软件包组        # 安装指定的软件包组
              eg：yum groupremove 软件包组      # 移除指定的软件包组
              eg：yum groupinfo 软件包组           # 查询指定的软件包组信息      

（3） Systemd初始化进程
        (1) 操作
              eg：systemctl start mysql.service              # 启动mysql.service服务
              eg：systemctl restart mysql.service           # 重启服务
              eg：systemctl stop mysql.service              # 停止服务
              eg：systemctl reload mysql.service           # 重新加载配置文件（不终止服务）
              eg：systemctl status mysql.service            # 查看服务状态 
              eg：systemctl enable mysql.service           #  开机自动启动
              eg：systemctl disable mysql.service          #  开机不自动启动
              eg：systemctl is-enabled mysql.service     # 查看服务是否开机自启 
        (2) 跟多操作详见：https://www.cnblogs.com/zhming26/p/6155201.html

2，常用系统工作命令
（1）date
      # 显示及设置系统的时间或日期   -s(设置时间)
        eg：date    # Tue Jan  8 15:17:39 CST 2019    # 显示当前时间
        eg：date "+%Y-%m-%d %H:%M:%S"    # 2019-01-08 15:18:13  # 按照年月日时分秒的形式现在时间
        eg：date -s "20190108 8:30:00"             # 设置当前时间为2019-01-08 08:30:00
        eg：date "+%j"    # 008    # 查看当前时间是今年的第几天
（2）top
      # 动态地监视进程活动与系统负载等信息   
      #  -p(指定进程)
        eg：
        (1) top - 16:04:53 up 13 days, 22:54,  2 users,  load average: 0.01, 0.01, 0.00
        (2) Tasks: 138 total,   2 running, 136 sleeping,   0 stopped,   0 zombie
        (3) %Cpu(s):  1.7 us,  0.7 sy,  0.0 ni, 97.7 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
        (4) KiB Mem :   884936 total,    88288 free,   409328 used,   387320 buff/cache
        (5) KiB Swap:        0 total,        0 free,        0 used.   265804 avail Mem 
        第一行：(时间，负载)
        # 系统时间(16:04:53)，系统运行时间(up 13 days, 22:54)，登录终端数(2 users)
        # 系统负载(load average: 0.01, 0.01, 0.00)（三个数值分别为1分钟、5分钟、15分钟内的平均值，数值越小意味着负载越低）
        第二行：(进程)
        # 进程总数(Tasks: 138 total)，运行中的进程数(2 running)，睡眠中的进程数( 136 sleeping)，停止的进程数( 0 stopped)，僵死的进程数(0 zombie)
        第三行：(cpu占用率)
        # 用户空间占用CPU百分比(1.7 us)，系统内核空间占用CPU百分比(0.7 sy)，用户进程空间内改变过优先级的进程占用CPU百分比(0.0 ni)
        # 空闲CPU百分比(97.7 id)，等待输入输出的CPU时间百分比(0.0 wa)
        第四行：(物理内存)
        # 物理内存总量(884936 total)、内存使用量(88288 free)、内存空闲量(409328 used)、作为内核缓存的内存量(387320 buff/cache)
        第五行：(虚拟内存)
        # 虚拟内存总量( 0 total)、虚拟内存空闲量(0 free)、虚拟内存使用量( 0 used)、已被提前加载的内存量(265804 avail Mem)
        eg：top -p 1138      #显示进程号为1138的进程信息，CPU、内存占用率等     
（3）系统关闭 ，重启       
        (1) reboot                             # 重启系统 
        (2) shutdown -r now            # 立刻重启(root用户使用)
        (3) shutdown -r 10               # 过10分钟自动重启(root用户使用)
        (4) shutdown -r 20:35           # 在时间为20:35时候重启(root用户使用)     
        (5) poweroff                         # 关闭系统
        (6) shutdown -h now            # 立刻关机(root用户使用)
        (7) shutdown -h 10              # 10分钟后自动关机 
（4）/etc/hostname
      # 配置主机名称
（5）pgrep 
      #  通过程序的名字来查询进程的工具，一般是用来判断程序是否正在运行
        eg：pgrep python    # 查看当前python的进程id
（6）kill
      #  用于终止某个指定PID的服务进程
      #  -9(彻底杀死进程)
        eg：kill -9 1908    # 彻底杀死进程1908
（7）killall
      #  以名字方式来杀死进程
       eg：killall nginx


3，系统状态检测命令
（1）ifconfig
      # 用于获取网卡配置与网络状态等信息
      # 网卡名称：eth0     IP地址：inet 192.168.10.10   网卡物理地址(MAC地址)：ether 00:0c:29:c4:a4:09 
      # 接收数据包：RX packets:14984559 errors:0 dropped:0 overruns:0 frame:0
      # 发送数据包：TX packets:19236771 errors:0 dropped:0 overruns:0 carrier:0
       eg：ifconfig              #处于激活状态的网络接口
       eg：ifconfig -a         #所有配置的网络接口，不论其是否激活
       eg：ifconfig eth0                 #显示eth0的网卡信息
       eg：ifconfig eth0 down       #关闭eth0网卡
       eg：ifconfig eth0 up            #开启eth0网卡
       eg：ifconfig eth0 192.168.1.56                                          #给eth0网卡配置IP地址
       eg：ifconfig eth0 192.168.1.56 netmask 255.255.255.0    #给eth0网卡配置IP地址,并加上子掩码
       eg：ifconfig eth0 192.168.1.56 netmask 255.255.255.0 broadcast 192.168.1.255   
               #给eth0网卡配置IP地址,加上子掩码,加上个广播地址
       eg：ifconfig eth0 hw ether 00:AA:BB:CC:DD:EE      #修改MAC地址
       eg：ifconfig eth0 add 33ffe:3240:800:1005::2/ 64  #为网卡添加IPv6地址
       eg：ifconfig eth0 del 33ffe:3240:800:1005::2/ 64 #为网卡删除IPv6地址
       eg：ifconfig eth0 arp   #开启arp功能
       eg：ifconfig eth0 -arp  #关闭arp功能      

（2）uname
      # 用于查看系统内核与系统版本等信息
       eg：uname -a    # 查看详细信息

（3）uptime
      # 用于查看系统的负载信息，就是top命令第一行的内容
       eg：uptime     # 22:49:55 up 10 min, 2 users, load average: 0.01, 0.19, 0.18

（4）free
      # 用于显示当前系统中内存的使用量信息 
      # -h(以可读的形式显示)
       eg：free -h   # 	     内存总量       已用量       可用量      进程共享的内存量     磁盘缓存的内存量     缓存的内存量    
                                     total	         used          free          shared	           buffers	          cached        
                        Mem:    1.8G	         1.3G          542M       9.8M	           1.6M	          413M
    -/+ buffers/cache:                        869M        957M	
                       Swap:     2.0G	         0B	          2.0G

（5）who
      # 显示目前登入系统的用户信息
       eg： who -b     # 上次系统启动时间

（6）last
     # 查看所有系统的登录记录
       eg：last -6      # 列出6条登录信息

（7）history
     # 显示历史执行过的命令
       eg：history >1.txt      #  将历史执行过的命令重定向到1.txt中，如果1.txt中之前有内容，会被删除。 #  >>1.txt 会在1.txt后面追加


4，文本文件编辑命令
（1）cat   
      # 用于查看纯文本文件（内容较少的）
      # -n ( 在显示的内容前面加上行号)
       eg：cat  -n   1.txt       # 查看1.txt中的内容，并在每行内容前面加上行号

（2）more
      # 用于查看纯文本文件（内容较多的）

（3）head
      # 用于查看纯文本文档的前N行内容
      # -n(显示每个文件的前K 行内容)
       eg：head 1.txt                # 显示前10行
       eg：head -n 2 1.txt         # 显示前2行
       eg：head -n -2 1.txt        # 显示从0到倒数第3行

（3）tail 
      # 用于查看纯文本文档的后N行或持续刷新内容
      # -f (当文件增长时,输出后续添加的数据)   -n(显示每个文件的后K 行内容)
       eg：tail 1.txt                  # 显示后10行内容
       eg：tail -n 3 1.txt           # 显示后3条内容
       eg：tail -n +8 1.txt         # 显示从第8行开始到最后的内容
       eg：tail -f 1.txt               # 当文件增长时,输出后续添加的数据

（4）tr
      # 用于替换文本文件中的字符
      # 备注：> 将文件写入符号后的文件里面，并删除里面原有的内容
      # 备注：>>  将文件追加到后面文件里面
      # 备注：<  读取符号后面的内容     
       eg：cat 1.txt | tr a-z A-Z > 3.txt           # 将1.txt中的小写字母换成大写字母并存在3.txt中
       eg：cat 1.txt | tr 'a' 'c'                          # 将1.txt中的 字母小写字母a换成字母小写字母c 
       eg：tr a c < 1.txt                                 # 会读取1.txt中的文件，并将a替换成c后打印出来                           

（5）wc
      # 用于统计指定文本的行数、单词数和字节数
      # -l (显示行数)   -w (显示单词数)  -c (显示字节数)
       eg：wc 1.txt       # 1 1 2  1.txt         #   1.txt里面有1行内容，共1个单词，总共两个字节      

（6）stat
      # 用于查看文件的具体存储信息和时间等信息

（7）file
      # 确定文件类型
       eg：file 1.txt        # 1.txt: UTF-8 Unicode text    # 1.txt是UTF-8编码的文件
       eg：file *             # 显示当前文件夹下所有文件的类型


二，环境变量
1，/etc/profile文件
（1）在/etc/profile文件中修改的环境变量，是对所有用户都起作用的
（2）添加全局环境变量，例如：
        #jdk
        export JAVA_HOME=/root/java/jdk1.8.0_201
        export JRE_HOME=/root/java/jdk1.8.0_201/jre
        export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
        export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
        (1) export 用来设置全局的变量，设置的变量所有用户都可以用
        (2) JAVA_HOME 表示变量名
        (3) /root/java/jdk1.8.0_201 表示变量的对应的地址

2，/etc/profile.d目录
（1）该目录也是存放全局环境变量。存放的是一些shell脚本

3，.bash_profile文件
（1）在每个用户的根目录下面存在，在这个文件里设置的环境变量只对该用户起作用

4，设置完环境变量后需要重启服务器或者重启配置文件(source /etc/profile)


三，VIM
1，三种模式之间的转化
（1）命令模式--编辑模式
        a(在下一个字符前输入)，i(在当前光标处输入)，o(在下一行输入)
（2）命令模式--末行模式
        用冒号进行转换(:)

2，命令模式常用操作
（1）dd	   删除光标所在整行
（2）yy	   复制光标所在整行
（3）5dd     删除光标向下5行内容(yy同理)
（4）u	   撤销上一步的操作
（5）p	   将之前删除（dd）或复制（yy）过的数据粘贴到光标后面
（6）n	  显示搜索命令定位到的下一个字符串
（7）N	  显示搜索命令定位到的上一个字符串

3，末行模式常用操作
（1）:w	                 保存
（2）:set nu	显示行号
（3）:set nonu	不显示行号
（4）:整数   	跳转到该行
（5）/字符串	在文本中从上至下搜索该字符串
（6）?字符串	在文本中从下至上搜索该字符串


四，网络配置
备注：https://blog.csdn.net/qq_37506868/article/details/79414755
1，eth和ens的区别
（1）一个是真实物理网卡，一个是虚拟网络会话，两者之间的关系就是一个真实物理网卡上可以绑定多个虚拟网络会话。eth0是真实物理网卡，ens33是虚拟网络会话。
（2） /etc/sysconfig/network 文件（设定全局网络参数）
（3）/etc/sysconfig/network-scripts/ifcfg-ethN 文件  （网络接口的配置）
        # 网络类型（通常是Ethemet）
           TYPE=Ethernet
        # IP配置方法 [none|static|bootp|dhcp]（引导时不使用协议|静态分配IP|BOOTP协议|DHCP协议）
        # dhcp表示动态获取
        # static或none表示静态手工配置，若想使用本地配置好的IP则应该设置成这个
           BOOTPROTO=dhcp
        # 是否设置默认路由，yes表示该配置
        # 若为yes则可以在该文件通过IPADDR和PREFIX两个参数来设置网关
           DEFROUTE=yes
        # 网卡名
           NAME=ens33
        # 接口名（设备,网卡）
           DEVICE=ens33
        # 开机启动
           ONBOOT=yes
（4）/etc/resolv.conf 文件  （DNS域名设置）
        # 域名的搜索列表,默认情况下仅包括本地域名
          search fish-23.com
       # DNS服务器的IP地址,总共可以指定3个DNS服务器IP地址
          nameserver 61.134.1.4
（5）/etc/hosts 文件 （DNS域名设置）
       127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
       ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6
       #以上两行建议保留
       # IP 地址 主机名(Hostname) 主机别名(Alias)
       208.164.186.1 deep.openna.com deep
       208.164.186.2 mail.openna.com mail
       208.164.186.3 web.openna.com web
